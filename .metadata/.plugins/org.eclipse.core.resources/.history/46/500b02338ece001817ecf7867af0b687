package dwrightmod4csc_201;

public class MergeArray {

	public static void main(String[] args) {

		int[] a = { 3, 6, 10, 14, 21 };
		int[] b = { 24, 15, 13, 12, 5, 2, 1 };
		int[] c = mergeArray(a, b);
		printResult(c);
	}

	public static int[] mergeArray(int[] first, int[] second) {

		
		int[] c = first;
		int[] d = second;
		int i=0,j=0,k=0;
		int clength = c.length;
		int dlength = d.length;
		int total = c.length + d.length;
		int[] result = new int[total];
		
		while (k < total) {
			int lowest = 1000;
			i=0;
			j=0;
			while(i < clength && j < dlength) {
				if (c[i] < lowest && c[i] < d[j]) {
					lowest =c[i] ;
					i++;
				}
				else if (d[j] < lowest && d[j] < c[i]) {
					lowest = d[j];
					j++;
				}
				else if(i < clength && j < dlength){
					i++;
					j++;
				}
//				else if(i < clength && j < dlength){
//				i++;
//				j++;
//			}
//
			}
			for(int m = 0; m < clength; m++) {
				if (c[m] == lowest)
					c[m] = 9999;
			}
			for(int m = 0; m < clength; m++) {
				if (d[m] == lowest)
					d[m] = 9999;
			}
			result[k] = lowest;
			
			k++;
			
		}

		return result;

	}

	public static void printResult(int[] c) {

		int[] print = c;
		
		for(int i = 0; i < print.length; i++) {
			System.out.print(print[i] + " ");
		}
		
	}
}
